{"version":3,"sources":["webpack://microverse-weather-app/webpack/bootstrap","webpack://microverse-weather-app/webpack/runtime/define property getters","webpack://microverse-weather-app/webpack/runtime/hasOwnProperty shorthand","webpack://microverse-weather-app/webpack/runtime/make namespace object","webpack://microverse-weather-app/./src/utils.ts","webpack://microverse-weather-app/./src/renderer/rain.ts","webpack://microverse-weather-app/./src/renderer/lightning.ts","webpack://microverse-weather-app/./src/renderer/clouds.ts","webpack://microverse-weather-app/./src/renderer/snow.ts","webpack://microverse-weather-app/./src/dom.ts","webpack://microverse-weather-app/./src/renderer/index.ts","webpack://microverse-weather-app/./src/api.ts","webpack://microverse-weather-app/./src/index.ts"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","stopFn","lightning","cb","fn","randomFloat","min","max","Math","random","randomInt","floor","initCanvas","canvas","init","render","ctx","getContext","requestAnimationId","fps","fpsTracker","customRender","times","now","performance","length","shift","push","updateFps","animationMultiplier","window","requestAnimationFrame","width","innerWidth","height","innerHeight","addEventListener","cancelAnimationFrame","clearRect","DROPLETS_COUNT","TROUGHS_COUNT","document","querySelector","droplets","troughs","l","opacity","xs","ys","this","x","y","rendererArg","droplet","trough","update","beginPath","moveTo","lineTo","strokeStyle","lineWidth","lineCap","stroke","grd","createLinearGradient","addColorStop","fillStyle","fillRect","fill","draw","i","RainDroplet","RainTrough","start","arg","dropletsCount","troughsCount","style","backgroundColor","stop","bolts","frames","maxFrames","count","pathLimit","xRange","yRange","path","last","id","Date","stage","done","bolt","setTimeout","filter","Lightning","globalCompositeOperation","lineJoin","animation","clouds","CLOUDS_COUNT","thickness","cloud","Cloud","cfg","PARTICLES_COUNT","particles","angle","r","d","particle","cos","sin","arc","PI","SnowParticle","particlesCount","hide","elem","classList","remove","add","show","$form","$formError","$searchInput","$data","$searchIcon","$logo","$unitSwitch","setFormError","err","innerHTML","switchMode","mode","body","getUnitSwitchValue","checked","stopLoading","disabled","createTextElement","tag","content","createElement","BACKGORUNDS","darkClouds","cloudySky","dustySky","mistySky","setBackground","bg","backgroundImage","forEach","item","undefined","handleThunderstorm","handleDrizzle","handleRain","handleSnow","handleClouds","handleOthers","getData","q","units","fetch","API_URL","URLSearchParams","appid","json","localStorage","getItem","unit","loading","search","val","data","cod","setItem","weather","secondsOffset","n","j","k","date","utc","$location","$date","$desc","$temperatureNumber","$temperatureUnit","$extra","name","timezone","getTime","getTimezoneOffset","getDay","getDate","getMonth","getFullYear","round","main","temp","toString","description","getUnitSign","appendChild","feels_like","humidity","temp_min","temp_max","console","log","catch","e","preventDefault"],"mappings":"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","file":"83337fd22b36a57e9a05_bundle.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const randomFloat = (min: number, max: number): number => Math.random() * (max - min) + min;\nexport const randomInt = (min: number, max: number): number => Math.floor(randomFloat(min, max));\n\nexport const updateFps = (times: number[]) => {\n    const now = performance.now();\n    while (times.length > 0 && times[0] <= now - 1000) {\n      times.shift();\n    }\n    times.push(now);\n    return times.length;\n};\n\nexport type CanvasRendererArg = {\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    animationMultiplier: number;\n};\n\nexport type CanvasRenderer = (args: CanvasRendererArg) => void;\n\nexport type CanvasInitializer = (canvas: HTMLCanvasElement) => void;\n\nexport const initCanvas = (canvas: HTMLCanvasElement, init: CanvasInitializer, render: CanvasRenderer) => {\n    const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n    let requestAnimationId = 0;\n\n    let fps = 0;\n    let animationMultiplier = 1;\n    let fpsTracker: number[] = [];\n\n\n    const customRender = () => {\n        fps = updateFps(fpsTracker);\n        animationMultiplier = 60 / fps;\n\n        render({ canvas, ctx, animationMultiplier });\n        requestAnimationId = window.requestAnimationFrame(customRender);\n    };\n\n    const cleanup = () => {\n        window.cancelAnimationFrame(requestAnimationId);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n    init(canvas);\n    requestAnimationId = window.requestAnimationFrame(customRender);\n\n    window.addEventListener(\"resize\", () => {\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        init(canvas);\n    });\n\n    return cleanup;\n};\n\nexport const getUnitSign = (unit: string) => unit === \"imperial\" ? \"F\" : \"C\";\n\nexport const getOrdinalSuffix = (n: number): string => {\n    const j = n % 10,\n          k = n % 100;\n    if (j === 1 && k !== 11) {\n        return \"st\";\n    }\n    if (j === 2 && k !== 12) {\n        return \"nd\";\n    }\n    if (j === 3 && k !== 13) {\n        return \"rd\";\n    }\n    return \"th\";\n};\n\nexport const getFormattedDate = (secondsOffset: number): string => {\n    const DAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    const MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const date = new Date();\n\n    const utc = date.getTime() + (date.getTimezoneOffset() * 60000);\n\n    const d = new Date(utc + secondsOffset * 1000);\n\n    return `${DAYS[d.getDay()]}, ${d.getDate()}<sup>${getOrdinalSuffix(d.getDate())}</sup> of ${MONTHS[d.getMonth()]} ${d.getFullYear()}`;\n};","import * as utils from \"../utils\";\n\nlet DROPLETS_COUNT = 300;\nlet DROPLET_COLOR  = \"rgba(174,194,224,0.5)\";\n\nlet TROUGHS_COUNT = 300;\nlet TROUGH_SPEED = 25;\n\nconst canvas = document.querySelector(\"#rain-canvas\") as HTMLCanvasElement;\n\nlet droplets: RainDroplet[] = [];\nlet troughs: RainTrough[] = [];\n\nclass RainTrough {\n    x: number;\n    y: number;\n\n    l      : number = utils.randomInt(1, 830);\n    opacity: number = utils.randomFloat(0, 0.2);\n    xs     : number = utils.randomFloat(-2, 2);\n    ys     : number = utils.randomFloat(10, 20);\n\n    constructor(width: number, height: number) {\n        this.x = utils.randomInt(0, width);\n        this.y = utils.randomInt(0, height);\n    }\n}\n\nclass RainDroplet {\n    x : number;\n    y : number;\n\n    l  : number = utils.randomFloat(0, 1);\n    xs : number = utils.randomFloat(-2, 2);\n    ys : number = utils.randomFloat(10, 20);\n\n    constructor(width: number, height: number) {\n        this.x = utils.randomInt(0, width);\n        this.y = utils.randomInt(0, height);\n    }\n}\n\n\nconst draw = ({ ctx, canvas }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    ctx.clearRect(0, 0, width, height);\n    for (let droplet of droplets) {\n        ctx.beginPath();\n        ctx.moveTo(droplet.x, droplet.y);\n        ctx.lineTo(droplet.x + droplet.l * droplet.xs, droplet.y + droplet.l * droplet.ys);\n        ctx.strokeStyle = DROPLET_COLOR;\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.stroke();\n    }\n\n    for (let trough of troughs) {\n        ctx.beginPath();\n        const grd = ctx.createLinearGradient(0, trough.y, 0, trough.y + trough.l);\n        grd.addColorStop(0, \"rgba(255,255,255,0)\");\n        grd.addColorStop(1, \"rgba(255,255,255,\" + trough.opacity + \")\");\n\n        ctx.fillStyle = grd;\n        ctx.fillRect(trough.x, trough.y, 1, trough.l);\n        ctx.fill();\n    }\n};\n\nconst update = ({ canvas, animationMultiplier }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    for (let droplet of droplets) {\n        droplet.x += droplet.xs * animationMultiplier;\n        droplet.y += droplet.ys * animationMultiplier;\n        if (droplet.x > width || droplet.y > height) {\n            droplet.x = utils.randomInt(0, width);\n            droplet.y = -20;\n        }\n    }\n    for (let trough of troughs) {\n        trough.y += TROUGH_SPEED * animationMultiplier;\n        if (trough.y >= height) {\n            trough.y = height - trough.y - trough.l * 5;\n        }\n    }\n};\n\nconst render: utils.CanvasRenderer = (rendererArg) => {\n    update(rendererArg);\n    draw(rendererArg);\n};\n\n\n\nconst init: utils.CanvasInitializer = (canvas) => {\n    const { width, height } = canvas;\n\n    for (let i = 0; i < DROPLETS_COUNT; i += 1) {\n        droplets[i] = new RainDroplet(width, height);\n    }\n\n    for (let i = 0; i < TROUGHS_COUNT; i += 1) {\n        troughs[i] = new RainTrough(width, height);\n    }\n};\n\nlet stopFn: () => void;\n\ntype RainConfig = {\n    dropletsCount : number;\n    troughsCount  : number;\n};\n\nconst start = (arg: RainConfig) => {\n    DROPLETS_COUNT = arg.dropletsCount;\n    TROUGHS_COUNT  = arg.troughsCount;\n    canvas.style.backgroundColor = \"rgba(0, 0, 0, 0.4)\";\n    stopFn = utils.initCanvas(canvas, init, render);\n};\n\nconst stop = () => {\n    if (stopFn) stopFn();\n    canvas.style.backgroundColor = \"transparent\";\n};\n\nexport { start, stop };","import * as utils from \"../utils\";\n\nconst canvas = document.querySelector(\"#lightning-canvas\") as HTMLCanvasElement;\n\nlet lightning: Lightning;\n\ntype Point = {\n    x : number;\n    y : number;\n};\n\ntype LightningBolt = {\n    id    : number;\n    x     : number;\n    y     : number;\n    path  : Point[];\n    stage : number;\n    done  : boolean;\n};\n\nclass Lightning {\n    bolts    : LightningBolt[] = [];\n    frames   : number          = 0;\n    maxFrames: number          = utils.randomInt(500, 700);\n\n    constructor(width: number, height: number) {\n        const count = utils.randomInt(2, 5);\n        const x     = utils.randomInt(100, width - 100), y = utils.randomInt(0, height / 4);\n\n        for (let i = 0; i < count; i += 1) {\n            const pathLimit = utils.randomInt(40, 65),\n                  xRange    = utils.randomInt(5, 30),\n                  yRange    = utils.randomInt(10, 35);\n\n            let path: Point[] = [{ x, y }];\n            for (let i = 0; i < pathLimit - 1; i += 1) {\n                const last = path[path.length - 1];\n                path.push({\n                    x: last.x + utils.randomInt(-xRange / 2, xRange / 2),\n                    y: last.y + utils.randomInt(0, yRange)\n                });\n            }\n            path.shift();\n            this.bolts.push({\n                id: Date.now(),\n                x,\n                y,\n                path,\n                stage: 1,\n                done: false\n            });\n        }\n    }\n}\n\nconst update = ({ canvas, animationMultiplier }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n\n    for (let i = 0; i < lightning.bolts.length; i += 1) {\n        const bolt = lightning.bolts[i];\n        if (bolt.done) continue;\n        bolt.stage = Math.min(bolt.stage + 1 * animationMultiplier, bolt.path.length);\n        if (bolt.stage >= bolt.path.length) {\n            bolt.done = true;\n            setTimeout(() => {\n                lightning.bolts = lightning.bolts.filter(({ id }) => id !== bolt.id);\n            }, 200);\n        }\n    }\n\n    lightning.frames += 1 * animationMultiplier;\n    if (lightning.frames >= lightning.maxFrames) {\n        lightning = new Lightning(width, height);\n    }\n};\n\nconst draw = ({ ctx, canvas }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    // Clear\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.fillStyle = `rgba(0, 0, 0, ${utils.randomInt(1, 30) / 100})`;\n    ctx.fillRect(0, 0, width, height);\n    ctx.globalCompositeOperation = \"source-over\";\n\n    // Draw\n    for (const bolt of lightning.bolts) {\n        ctx.strokeStyle = \"rgba(255, 255, 255, .15)\";\n        ctx.lineWidth = 3;\n        if (utils.randomInt(0, 15) === 0) ctx.lineWidth = 6;\n        if (utils.randomInt(0, 30) === 0) ctx.lineWidth = 8;\n\n        ctx.beginPath();\n        ctx.moveTo(bolt.x, bolt.y);\n        for (let i = 0; i < bolt.stage; i += 1) {\n            const { x, y } = bolt.path[i];\n            ctx.lineTo(x, y);\n        }\n\n        ctx.lineJoin = \"miter\";\n        ctx.stroke();\n    }\n}\n\nconst render: utils.CanvasRenderer = (rendererArg) => {\n    update(rendererArg);\n    draw(rendererArg);\n\n};\n\nconst init: utils.CanvasInitializer = (canvas) => {\n    const { width, height } = canvas;\n\n    lightning = new Lightning(width, height);\n\n    canvas.style.animation = \"thunder 6s infinite\";\n};\n\nlet stopFn: () => void;\n\nconst start = () => {\n    stopFn = utils.initCanvas(canvas, init, render);\n};\n\nconst stop = () => {\n    if (stopFn) stopFn();\n};\n\nexport { start, stop };\n","import * as utils from \"../utils\";\n\nconst canvas = document.querySelector(\"#cloud-canvas\") as HTMLCanvasElement;\n\nlet clouds: Cloud[] = [];\n\nlet CLOUDS_COUNT = 30;\n\nclass Cloud {\n    x : number;\n    y : number;\n\n    opacity   : number = utils.randomFloat(0.3, 0.8);\n    length    : number = utils.randomInt(30, 100);\n    thickness : number = utils.randomFloat(2, 30);\n    xs        : number = utils.randomFloat(0.5, 4);\n\n    constructor(width: number, height: number) {\n        this.x = utils.randomInt(0, width);\n        this.y = utils.randomInt(0, height);\n    }\n}\n\nconst update = ({ canvas, animationMultiplier }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    for (let cloud of clouds) {\n        cloud.x += cloud.xs * animationMultiplier;\n        if (cloud.x >= width) {\n            cloud.x = - cloud.length;\n            cloud.y = utils.randomInt(0, height);\n        }\n    }\n};\n\nconst draw = ({ ctx, canvas }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    ctx.clearRect(0, 0, width, height);\n\n    for (let cloud of clouds) {\n        ctx.beginPath();\n        ctx.lineTo(cloud.x, cloud.y);\n        ctx.lineTo(cloud.x + cloud.length, cloud.y);\n        ctx.strokeStyle = `rgba(255, 255, 255, ${cloud.opacity})`;\n        ctx.lineWidth = cloud.thickness;\n        ctx.lineCap = \"round\";\n        ctx.stroke();\n    }\n};\n\nconst render: utils.CanvasRenderer = (rendererArg) => {\n    update(rendererArg);\n    draw(rendererArg);\n};\n\n\nconst init: utils.CanvasInitializer = (canvas) => {\n    const { width, height } = canvas;\n\n    for (let i = 0; i < CLOUDS_COUNT; i += 1) {\n        clouds[i] = new Cloud(width, height);\n    }\n};\n\nlet stopFn: () => void;\n\ntype CloudsConfig = {\n    count: number;\n};\n\nconst start = (cfg: CloudsConfig) => {\n    CLOUDS_COUNT = cfg.count;\n    stopFn = utils.initCanvas(canvas, init, render);\n};\n\nconst stop = () => {\n    if (stopFn) stopFn();\n};\n\nexport { start, stop };\n","import * as utils from \"../utils\";\n\nlet PARTICLES_COUNT = 500;\n\nlet particles: SnowParticle[] = [];\n\nconst canvas = document.querySelector(\"#snow-canvas\") as HTMLCanvasElement;\n\nlet angle = 0;\n\nclass SnowParticle {\n    x: number;\n    y: number;\n    r: number = utils.randomFloat(1, 4);\n    d: number = utils.randomFloat(5, 50);\n\n    constructor(width: number, height: number) {\n        this.x = utils.randomInt(0, width);\n        this.y = utils.randomInt(0, height);\n    }\n}\n\n\nconst draw = ({ ctx, canvas }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    ctx.clearRect(0, 0, width, height);\n    ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\n    for (let particle of particles) {\n        const { x, y, r } = particle;\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, r, 0, Math.PI * 2, true);\n        ctx.fill();\n    }\n};\n\nconst update = ({ canvas, animationMultiplier }: utils.CanvasRendererArg) => {\n    const { width, height } = canvas;\n    angle += 0.005 * animationMultiplier;\n    for (let particle of particles) {\n        particle.y += Math.cos(angle + particle.d) + 1 * animationMultiplier + (particle.r / 4 * animationMultiplier);\n        particle.x += Math.sin(angle) * 2;\n\n        if(particle.x > width + 5 || particle.x < -5 || particle.y > height) {\n            if (utils.randomInt(0, 10) > 3) {\n                particle.x = utils.randomInt(0, width);\n                particle.y = -10;\n            } else {\n                if (Math.sin(angle) > 0) {\n                    particle.x = -5;\n                    particle.y = utils.randomInt(0, height);\n                } else {\n                    particle.x = width + 5;\n                    particle.y = utils.randomInt(0, height);\n                }\n            }\n        }\n    }\n};\n\nconst render: utils.CanvasRenderer = (rendererArg) => {\n    update(rendererArg);\n    draw(rendererArg);\n};\n\nconst init: utils.CanvasInitializer = (canvas) => {\n    const { width, height } = canvas;\n\n    for (let i = 0; i < PARTICLES_COUNT; i += 1) {\n        particles[i] = new SnowParticle(width, height);\n    }\n};\n\nlet stopFn: () => void;\n\ntype SnowConfig = {\n    particlesCount: number;\n};\n\nconst start = (arg: SnowConfig) => {\n    PARTICLES_COUNT = arg.particlesCount;\n\n    stopFn = utils.initCanvas(canvas, init, render);\n};\n\nconst stop = () => {\n    if (stopFn) stopFn();\n};\n\nexport { start, stop };","import { TemperatureUnit, WeatherData } from \"./api\";\nimport { getFormattedDate, getUnitSign } from \"./utils\";\n\nexport const hide = (elem: HTMLElement) => {\n    elem.classList.remove(\"display-block\");\n    elem.classList.add(\"display-none\");\n};\n\nexport const show = (elem: HTMLElement) => {\n    elem.classList.remove(\"display-none\");\n    elem.classList.add(\"display-block\");\n};\n\nexport const $form        = document.querySelector(\"#form\") as HTMLFormElement;\nexport const $formError   = $form.querySelector(\".error\") as HTMLParagraphElement;\nexport const $searchInput = $form.querySelector(\"#location\") as HTMLInputElement;\nexport const $data        = document.querySelector(\"#data\") as HTMLElement;\nexport const $searchIcon  = document.querySelector(\".search-icon\") as HTMLElement;\nexport const $logo        = document.querySelector(\".header .icon\") as HTMLElement;\nexport const $unitSwitch  = document.querySelector(\"#unit-switch\") as HTMLInputElement;\n\nexport const setFormError = (err: string) => {\n    $formError.innerHTML = err;\n};\n\nexport const clearFormError = () => {\n    $formError.innerHTML = \"\";\n};\n\nexport const switchMode = (mode: \"light\" | \"dark\") => {\n    if (mode === \"light\") {\n        document.body.classList.remove(\"dark\");\n    } else {\n        document.body.classList.add(\"dark\");\n    }\n};\n\nexport const getUnitSwitchValue = (): TemperatureUnit => $unitSwitch.checked ? \"imperial\" : \"metric\";\n\nexport const onUnitSwitchChange = (fn: (val: TemperatureUnit) => void) => {\n    $unitSwitch.addEventListener(\"change\", (e) => {\n        fn(getUnitSwitchValue());\n    });\n};\n\nexport const setUnitSwitchValue = (val: TemperatureUnit) => {\n    if (val === \"imperial\") $unitSwitch.checked = true;\n};\n\n\nconst onSearch = (cb: (value: string) => void) => {\n    $form.addEventListener(\"submit\", (e) => {\n        e.preventDefault();\n        cb($searchInput.value);\n    });\n};\n\nconst startLoading = () => {\n    $logo.classList.add(\"loading\");\n    $searchInput.disabled = true;\n};\nconst stopLoading = () => {\n    $logo.classList.remove(\"loading\");\n    $searchInput.disabled = false;\n};\n\nconst createTextElement = (tag: string, content: string): HTMLElement => {\n    const elem = document.createElement(tag);\n    elem.innerHTML = content;\n    return elem;\n};\n\nexport const BACKGORUNDS = {\n    darkClouds: \"img/thunder-clouds.jpg\",\n    cloudySky: \"img/sky-day.jpg\",\n    dustySky: \"img/dusty-sky.jpg\",\n    mistySky: \"img/misty-sky.jpg\",\n};\n\nexport const setBackground = (bg: keyof typeof BACKGORUNDS) => {\n    document.body.style.backgroundImage = `url(${BACKGORUNDS[bg]})`;\n};\n\nexport const setData = (data: WeatherData, unit: TemperatureUnit) => {\n    const $location          = $data.querySelector(\".location\") as HTMLElement,\n          $date              = $data.querySelector(\".date\") as HTMLElement,\n          $desc              = $data.querySelector(\".desc\") as HTMLElement,\n          $temperatureNumber = $data.querySelector(\".temperature-number\") as HTMLElement,\n          $temperatureUnit   = $data.querySelector(\".temperature-unit\") as HTMLElement,\n          $extra             = $data.querySelector(\".extra\") as HTMLElement;\n    \n    $location.innerHTML = data.name;\n    $date.innerHTML = getFormattedDate(data.timezone);\n    $temperatureNumber.innerHTML = Math.round(data.main.temp).toString();\n    $desc.innerHTML = data.weather[0].description;\n    $temperatureUnit.innerHTML = getUnitSign(unit);\n    $extra.innerHTML = \"\";\n    $extra.appendChild(createTextElement(\"div\", \"Feels like\"));\n    $extra.appendChild(createTextElement(\"div\", Math.round(data.main.feels_like).toString()));\n\n    $extra.appendChild(createTextElement(\"div\", \"Humidity\"));\n    $extra.appendChild(createTextElement(\"div\", `${data.main.humidity}%`));\n\n    $extra.appendChild(createTextElement(\"div\", \"Min\"));\n    $extra.appendChild(createTextElement(\"div\", Math.round(data.main.temp_min).toString()));\n\n    $extra.appendChild(createTextElement(\"div\", \"Max\"));\n    $extra.appendChild(createTextElement(\"div\", Math.round(data.main.temp_max).toString()));\n};\n\n\nexport {\n    onSearch,\n    startLoading,\n    stopLoading,\n};","import * as rain from \"./rain\";\nimport * as lightning from \"./lightning\";\nimport * as clouds from \"./clouds\";\nimport * as snow from \"./snow\";\nimport { randomInt } from \"../utils\";\nimport { switchMode, setBackground } from \"../dom\";\n\nconst handleThunderstorm = (id: number) => {\n    setBackground(\"darkClouds\");\n    switchMode(\"dark\");\n    lightning.start();\n\n    switch (id) {\n        case 200:\n        case 230:\n            rain.start({ troughsCount: 20, dropletsCount: 100 });\n            break;\n        case 201:\n        case 231:\n            rain.start({ troughsCount: 80, dropletsCount: 300 });\n            break;\n        case 202:\n        case 232:\n            rain.start({ troughsCount: 200, dropletsCount: 500 });\n            break;\n        default:\n            rain.start({ troughsCount: 30, dropletsCount: 150 });\n            break;\n    }\n};\n\nconst handleDrizzle = (id: number) => {\n    setBackground(\"darkClouds\");\n    switchMode(\"dark\");\n\n    switch (id) {\n        case 300:\n        case 310:\n            rain.start({ troughsCount: 0, dropletsCount: 70 });\n            break;\n        case 301:\n        case 311:\n            rain.start({ troughsCount: 0, dropletsCount: 150 });\n            break;\n        case 302:\n        case 312:\n            rain.start({ troughsCount: 20, dropletsCount: 100 });\n            break;\n        case 314:\n            rain.start({ troughsCount: 50, dropletsCount: 200 });\n            break;\n        default:\n            rain.start({ troughsCount: 10, dropletsCount: 150 });\n            break;\n    }\n};\n\nconst handleRain = (id: number) => {\n    setBackground(\"darkClouds\");\n    switchMode(\"dark\");\n\n    switch (id) {\n        case 500:\n        case 520:\n            rain.start({ troughsCount: 10, dropletsCount: 100 });\n            break;\n        case 501:\n            rain.start({ troughsCount: 30, dropletsCount: 150 });\n            break;\n        case 502:\n        case 503:\n            rain.start({ troughsCount: 50, dropletsCount: 300 });\n            break;\n        case 504:\n            rain.start({ troughsCount: 50, dropletsCount: 400 });\n            break;\n        case 511:\n            rain.start({ troughsCount: 100, dropletsCount: 500 });\n            break;\n        default:\n            rain.start({ troughsCount: 50, dropletsCount: 300 });\n            break;\n    }\n};\n\nconst handleSnow = (id: number) => {\n    setBackground(\"darkClouds\");\n    switchMode(\"dark\");\n\n    switch (id) {\n        case 600:\n        case 611:\n            snow.start({ particlesCount: 150 });\n            break;\n        case 601:\n            snow.start({ particlesCount: 320 });\n            break;\n        case 602:\n            snow.start({ particlesCount: 450 });\n            break;\n        case 612:\n        case 613:\n            snow.start({ particlesCount: 150 });\n            rain.start({ troughsCount: 10, dropletsCount: 50 });\n            break;\n        case 615:\n        case 616:\n            snow.start({ particlesCount: 150 });\n            rain.start({ troughsCount: 10, dropletsCount: 100 });\n            break;\n        case 620:\n        case 621:\n            snow.start({ particlesCount: 350 });\n            rain.start({ troughsCount: 30, dropletsCount: 100 });\n            break;\n        case 622:\n            snow.start({ particlesCount: 500 });\n            rain.start({ troughsCount: 30, dropletsCount: 200 });\n            break;\n        default:\n            snow.start({ particlesCount: 50 });\n            break;\n    }\n};\n\nconst handleOthers = (id: number) => {\n    switch (id) {\n        case 701:\n        case 711:\n        case 721:\n        case 741:\n            switchMode(\"light\");\n            setBackground(\"mistySky\");\n            break;\n        case 731:\n        case 751:\n        case 761:\n        case 762:\n            switchMode(\"dark\");\n            setBackground(\"dustySky\");\n            break;\n        default:\n            switchMode(\"light\");\n            setBackground(\"cloudySky\");\n            break;\n    }\n};\n\nconst handleClouds = (id: number) => {\n    switchMode(\"light\");\n    setBackground(\"cloudySky\");\n\n    switch (id) {\n        case 801:\n            clouds.start({ count: 10 });\n            break;\n        case 802:\n            clouds.start({ count: 20 });\n            break;\n        case 803:\n            clouds.start({ count: 30 });\n            break;\n        case 804:\n            clouds.start({ count: 40 });\n            break;\n        default:\n            clouds.start({ count: 15 });\n            break;\n    }\n};\n\nconst init = (id ?: number) => {\n    // Stop all animations\n    [rain, lightning, clouds, snow].forEach(item => item.stop());\n\n    if (id === undefined) {\n        init(randomInt(300, 900));\n        return;\n    }\n\n    // Weather condition id handling.\n    // For more info refer to: https://openweathermap.org/weather-conditions\n\n    if (id < 300) { // Thunderstorm\n        handleThunderstorm(id);\n    } else if (id < 400) { // Drizzle\n        handleDrizzle(id);\n    } else if (id < 600) { // Rain\n        handleRain(id);\n    } else if (id < 700) { // Snow\n        handleSnow(id);\n    } else if (id > 801) {\n        handleClouds(id);\n    } else { // others\n        handleOthers(id);\n    }\n}\n\nexport { init };","const API_URL = \"https://api.openweathermap.org/data/2.5/weather\";\nconst API_KEY = \"1e5b60249223eb25245ce5722c4fdc18\";\n\nexport type WeatherData = {\n    weather: {\n        id          : number;\n        main        : string;\n        description : string;\n        icon        : string;\n    }[];\n\n    main: {\n        temp       : number;\n        feels_like : number;\n        temp_min   : number;\n        temp_max   : number;\n        humidity   : number;\n    };\n\n    timezone : number;\n    name     : string;\n\n    cod ?: string;\n};\n\nexport type TemperatureUnit = \"metric\" | \"imperial\";\n\nconst getData = async (q: string, units: TemperatureUnit): Promise<WeatherData> => {\n    return (await fetch(`${API_URL}?${new URLSearchParams({\n        appid: API_KEY,\n        units,\n        q\n    })}`)).json();\n};\n\n\n\nexport { getData };","import * as renderer from \"./renderer/index\";\nimport { getData, TemperatureUnit } from \"./api\";\nimport * as dom from \"./dom\";\n\nlet q = window.localStorage.getItem(\"location\");\nlet unit: TemperatureUnit = window.localStorage.getItem(\"unit\") as TemperatureUnit || \"metric\";\nlet loading = false;\n\ndom.setUnitSwitchValue(unit);\nrenderer.init();\n\nif (q) {\n    search(q).catch(console.log);\n} else {\n    dom.switchMode(\"dark\");\n    dom.show(dom.$form);\n}\n\ndom.onSearch((val) => search(val).catch(console.log));\n\ndom.onUnitSwitchChange((val) => {\n    unit = val;\n    window.localStorage.setItem(\"unit\", val);\n    if (q) search(q);\n});\n\ndom.$searchIcon.addEventListener(\"click\", () => {\n    dom.hide(dom.$data);\n    dom.show(dom.$form);\n    q = null;\n});\n\n\nasync function search(val: string) {\n    if (loading) return;\n    dom.startLoading();\n    dom.clearFormError();\n    loading = true;\n    const unit = dom.getUnitSwitchValue();\n    try {\n        const data = await getData(val, unit);\n        loading = false;\n        dom.stopLoading();\n        if (data.cod === \"404\") {\n            dom.setFormError(\"Country/City was not found.\");\n            return;\n        }\n\n        window.localStorage.setItem(\"location\", val);\n        q = val;\n\n        renderer.init(data.weather[0].id);\n        dom.setData(data, unit);\n        dom.hide(dom.$form);\n        dom.show(dom.$data);\n    } catch (e) {\n        dom.stopLoading();\n        loading = false;\n        dom.setFormError(\"Network error.\");\n        console.log(e);\n    }\n}"],"sourceRoot":""}